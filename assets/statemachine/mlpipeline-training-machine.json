{
    "Comment": "Model Training",
    "StartAt": "LoadPipelineParameter",
    "States": {
      "LoadPipelineParameter": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "Parameters": {
          "FunctionName": "${PipelineParametersFunction}",
          "Payload": {
            "train_model": true
          }
        },
        "OutputPath": "$.Payload",
        "Next": "PrepareTrainingDataset"
      },
      "PrepareTrainingDataset": {
        "Type": "Task",
        "Resource": "arn:aws:states:::glue:startJobRun.sync",
        "Parameters": {
          "JobName": "${GluePrepareTrainingJobName}",
          "Arguments": {
            "--TARGET_S3_PATH.$": "$.Target_S3_path",
            "--TARGET_S3_BUCKET.$": "$.Target_S3_bucket",
            "--TRAINING_TIME_FRAME.$": "$.Training_time_frame",
            "--FORECAST_PERIOD.$": "$.Forecast_period",
            "--USE_WEATHER.$": "$.Use_weather"
          }
        },
        "Next": "ModelTraining",
        "ResultPath": null
      },
      "ModelTraining": {
        "ResultPath": "$.TrainingOutput",
        "Resource": "arn:aws:states:::sagemaker:createTrainingJob.sync",
        "Parameters": {
          "AlgorithmSpecification": {
            "TrainingImage": "${TrainingImage}/forecasting-deepar:1",
            "TrainingInputMode": "File"
          },
          "OutputDataConfig": {
            "S3OutputPath": "s3://${MLResourcesBucket}/sagemakerassets/model"
          },
          "StoppingCondition": {
            "MaxRuntimeInSeconds": 86400
          },
          "ResourceConfig": {
            "InstanceCount": 1,
            "InstanceType.$": "$.Training_instance_type",
            "VolumeSizeInGB": 40
          },
          "RoleArn": "${SageMakerRole}",
          "InputDataConfig": [
            {
              "DataSource": {
                "S3DataSource": {
                  "S3DataType": "S3Prefix",
                  "S3Uri.$": "$.Train_S3_uri",
                  "S3DataDistributionType": "FullyReplicated"
                }
              },
              "ChannelName": "train"
            },
            {
              "DataSource": {
                "S3DataSource": {
                  "S3DataType": "S3Prefix",
                  "S3Uri.$": "$.Test_S3_uri",
                  "S3DataDistributionType": "FullyReplicated"
                }
              },
              "ChannelName": "test"
            }
          ],
          "HyperParameters": {
            "time_freq": "1H",
            "epochs": "400",
            "early_stopping_patience": "40",
            "mini_batch_size": "48",
            "learning_rate": "5E-4",
            "context_length.$": "$.Prediction_length",
            "prediction_length.$": "$.Prediction_length"
          },
          "TrainingJobName.$": "$.Training_job_name"
        },
        "Type": "Task",
        "Next": "SaveModel"
      },
      "SaveModel": {
        "ResultPath": null,
        "Parameters": {
          "ExecutionRoleArn":  "${SageMakerRole}",
          "ModelName.$": "$.ModelName",
          "PrimaryContainer": {
            "Environment": {},
            "Image": "${TrainingImage}/forecasting-deepar:1",
            "ModelDataUrl.$": "$['TrainingOutput']['ModelArtifacts']['S3ModelArtifacts']"
          }
        },
        "Resource": "arn:aws:states:::sagemaker:createModel",
        "Type": "Task",
        "Next": "CreateModelEndpointConfig"
      },
      "CreateModelEndpointConfig": {
        "ResultPath": null,
        "Resource": "arn:aws:states:::sagemaker:createEndpointConfig",
        "Parameters": {
          "EndpointConfigName.$": "$.ModelName",
          "ProductionVariants": [
            {
              "InitialInstanceCount": 1,
              "InstanceType.$": "$.Endpoint_instance_type",
              "ModelName.$": "$.ModelName",
              "VariantName": "AllTraffic"
            }
          ]
        },
        "Type": "Task",
        "Next": "CheckEndpoint"
      },
      "CheckEndpoint": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "Parameters": {
          "FunctionName": "${HasEndpointFunction}",
          "Payload": {
            "endpoint_name.$": "$.ML_endpoint_name"
          }
        },
        "ResultPath": "$.HasEndpoints",
        "Next": "DoesEndpointExist"
      },
      "DoesEndpointExist": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.HasEndpoints.Payload.has_endpoint",
            "BooleanEquals": true,
            "Next": "UpdateModelEndpoint"
          }
        ],
        "Default": "CreateModelEndpoint"
      },
      "CreateModelEndpoint": {
        "Resource": "arn:aws:states:::sagemaker:createEndpoint",
        "Parameters": {
          "EndpointConfigName.$": "$.ModelName",
          "EndpointName.$": "$.ML_endpoint_name"
        },
        "Type": "Task",
        "End": true
      },
      "UpdateModelEndpoint": {
        "Resource": "arn:aws:states:::sagemaker:updateEndpoint",
        "Parameters": {
          "EndpointConfigName.$": "$.ModelName",
          "EndpointName.$": "$.ML_endpoint_name"
        },
        "Type": "Task",
        "End": true
      }
    }
  }