AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: "Deploys the data cataloging workflow. (qs-1r18anahd)"

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'Meter readings dataflow configuration'
        Parameters:
          - StagingDataBucket
          - IntegratedDataBucket
          - GlueStagingDatabase
          - GlueIntegratedDatabase
          - MdaGlueScriptBucket
    ParameterLabels:
      StagingDataBucket:
        default: S3 staging data bucket
      IntegratedDataBucket:
        default: S3 integration data bucket
      GlueStagingDatabase:
        default: Glue staging database
      GlueIntegratedDatabase:
        default: Glue integration database
      MdaGlueScriptBucket:
        default: Glue script S3 bucket

Parameters:
  StagingDataBucket:
    Type: String
    Description: 'S3 bucket to store staging data.'
  IntegratedDataBucket:
    Type: String
    Description: 'S3 bucket to store integration data.'
  GlueStagingDatabase:
    Type: String
    Description: 'Glue staging database.'
  GlueIntegratedDatabase:
    Type: String
    Description: 'Glue integration database.'
  MdaGlueScriptBucket:
    Type: String
    Description: 'Glue script bucket.'

Outputs:
  StagingGlueWorkflow:
    Value: !Ref MeterReadingIntegrationGlueWorkflow
  GlueTableStagingName:
    Value: !Ref GlueTableStaging

Resources:
  #
  # Glue Jobs
  #
  IntegrateMeterReadingsGlueJob:
    Type: AWS::Glue::Job
    Properties:
      Name: integrate-meterreadings
      Role: !GetAtt GlueJobRole.Arn
      Command:
        Name: "glueetl"
        ScriptLocation: !Sub s3://${MdaGlueScriptBucket}/scripts/meterreadings-integration-job.py
        PythonVersion: "3"
      DefaultArguments:
        --TempDir: !Sub "s3://${MdaGlueScriptBucket}/temp/"
        --enable-metrics: "true"
        --enable-continuous-cloudwatch-log: "true"
        --enable-continuous-log-filter: "true"
        --job-bookmark-option: "job-bookmark-enable"
        --job-language: "python"
        --enable-auto-scaling: "true"
        --enable-s3-parquet-optimized-committer: true
        --MDA_DATABASE_STAGING: !Ref GlueStagingDatabase
        --MDA_DATABASE_INTEGRATED: !Ref GlueIntegratedDatabase
        --STAGING_TABLE_NAME: "meter_readings_staging_json"
        --TARGET_TABLE_NAME: "meter_readings_integrated_parquet"
        --INTEGRATED_BUCKET_NAME: !Ref IntegratedDataBucket
      MaxRetries: 0
      NumberOfWorkers: 80
      WorkerType: G.1X
      ExecutionProperty:
        MaxConcurrentRuns: 1
      GlueVersion: "4.0"

  #
  # Glue Crawlers
  #
  StagingDataBucketCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Role: !GetAtt GlueCrawlerRole.Arn
      Targets:
        CatalogTargets:
          - DatabaseName: !Ref GlueStagingDatabase
            Tables:
              - meter_readings_staging_json
      SchemaChangePolicy:
        UpdateBehavior: "LOG"
        DeleteBehavior: "LOG"

  #
  # Glue Workflow
  #

  GlueWorkflowScheduleRule:
    Type: AWS::Scheduler::Schedule
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3001
    Properties:
      Description: "Schedule workflow run"
      Name: "Glue_Int_Workflow_Trigger"
      FlexibleTimeWindow:
        Mode: "OFF"
      ScheduleExpression: "cron(*/30 * * * ? *)"
      State: "DISABLED" #TODO Enable if not DEMO mode
      Target:
        Arn: "arn:aws:scheduler:::aws-sdk:glue:startWorkflowRun"
        Input: !Sub '{"Name": "${MeterReadingIntegrationGlueWorkflow}"}'
        RoleArn: !GetAtt EventBridgeSchedulerRole.Arn

  MeterReadingIntegrationGlueWorkflow:
    Type: AWS::Glue::Workflow
    Properties:
      Description: Meter reading Glue workflow to move data from staging to integrated zone.

  GlueEventWorkflowTrigger:
    Type: AWS::Glue::Trigger
    Properties:
      Actions:
        - CrawlerName: !Ref StagingDataBucketCrawler
      Type: EVENT
      Description: "Event based trigger for the glue workflow."
      WorkflowName: !Ref MeterReadingIntegrationGlueWorkflow

  IntegrationJobTrigger:
    Type: AWS::Glue::Trigger
    Properties:
      Type: "CONDITIONAL"
      StartOnCreation: true
      WorkflowName: !Ref MeterReadingIntegrationGlueWorkflow
      Actions:
        - JobName: !Ref IntegrateMeterReadingsGlueJob
      Predicate:
        Conditions:
          - LogicalOperator: "EQUALS"
            CrawlerName: !Ref StagingDataBucketCrawler
            CrawlState: "SUCCEEDED"

  #
  # Table
  #
  GlueTableIntegration:
    Type: "AWS::Glue::Table"
    Properties:
      DatabaseName: !Ref GlueIntegratedDatabase
      CatalogId: !Ref "AWS::AccountId"
      TableInput:
        Name: "meter_readings_integrated_parquet"
        TableType: "EXTERNAL_TABLE"
        Parameters:
          CrawlerSchemaDeserializerVersion: "1.0"
          CrawlerSchemaSerializerVersion: "1.0"
          classification: "parquet"
          compressionType: "snappy"
          typeOfData: "file"
        StorageDescriptor:
          Columns:
            - Name: "meter_id"
              Type: "string"
            - Name: "reading_value"
              Type: "double"
            - Name: "reading_date_time"
              Type: "timestamp"
            - Name: "reading_source"
              Type: "string"
          Location: !Sub "s3://${IntegratedDataBucket}/readings/parquet"
          InputFormat: "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat"
          OutputFormat: "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat"
          Compressed: true
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            Parameters:
              "serialization.format": "1"
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: "reading_type"
            Type: "string"
          - Name: "year"
            Type: "string"
          - Name: "month"
            Type: "string"
          - Name: "day"
            Type: "string"
          - Name: "hour"
            Type: "string"
        Retention: 0

  GlueTableStaging:
    Type: "AWS::Glue::Table"
    Properties:
      DatabaseName: !Ref GlueStagingDatabase
      CatalogId: !Ref "AWS::AccountId"
      TableInput:
        Name: "meter_readings_staging_json"
        TableType: "EXTERNAL_TABLE"
        Parameters:
          CrawlerSchemaDeserializerVersion: "1.0"
          CrawlerSchemaSerializerVersion: "1.0"
          classification: "json"
          typeOfData: "file"
          compressionType: "none"
        StorageDescriptor:
          Columns:
            - Name: "meter_id"
              Type: "string"
            - Name: "reading_type"
              Type: "string"
            - Name: "reading_value"
              Type: "string"
            - Name: "reading_date_time"
              Type: "string"
            - Name: "reading_source"
              Type: "string"
          Location: !Sub "s3://${StagingDataBucket}/readings/json"
          InputFormat: "org.apache.hadoop.mapred.TextInputFormat"
          OutputFormat: "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"
          Compressed: false
          NumberOfBuckets: -1
          SerdeInfo:
            SerializationLibrary: "org.openx.data.jsonserde.JsonSerDe"
            Parameters:
              paths: "meter_id,reading_date_time,reading_source,reading_type,reading_value,year,month,day,hour"
          StoredAsSubDirectories: false
        PartitionKeys:
          - Name: "year"
            Type: "string"
          - Name: "month"
            Type: "string"
          - Name: "day"
            Type: "string"
          - Name: "hour"
            Type: "string"
        Retention: 0

  #
  # Iam Roles
  #
  EventBridgeSchedulerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: "scheduler.amazonaws.com"
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: trigger_glue_workflow
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "glue:StartWorkflowRun"
                Resource: !Sub "arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:workflow/${MeterReadingIntegrationGlueWorkflow}"


  GlueCrawlerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSGlueServiceRole"

  GlueJobRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/CloudWatchFullAccess'

  S3MeterReadingBucketAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: s3-glue-meterreading-bucket-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:GetObject'
              - 's3:PutObject'
              - 's3:ListBucket'
              - 's3:DeleteObject'
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${StagingDataBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${StagingDataBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${IntegratedDataBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${IntegratedDataBucket}/*"
              - !Sub "arn:${AWS::Partition}:s3:::${MdaGlueScriptBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${MdaGlueScriptBucket}/*"
          - Effect: Allow
            Action:
              - 'glue:GetTable'
              - 'glue:UpdateTable'
              - 'glue:UpdateColumnStatisticsForTable'
              - 'glue:GetTables'
              - 'glue:GetPartition'
              - 'glue:GetPartitions'
              - 'glue:BatchCreatePartition'
              - 'glue:BatchGetPartition'
              - 'glue:BatchUpdatePartition'
            Resource:
              - !Sub "arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:catalog"
              - !Sub "arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:database/${GlueStagingDatabase}"
              - !Sub "arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:database/${GlueIntegratedDatabase}"
              - !Sub "arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:table/${GlueStagingDatabase}/meter_readings_staging_json"
              - !Sub "arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:table/${GlueIntegratedDatabase}/meter_readings_integrated_parquet"
      Roles:
        - !Ref GlueJobRole
        - !Ref GlueCrawlerRole
