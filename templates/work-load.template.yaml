AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: "Workload template to deploy the AWS Quick Start for the Utility Meter Data Analytics platform in an existing VPC. (qs-1r18anahd)"
Conditions:
  UsingDefaultBucket: !Equals [ !Ref QSS3BucketName, 'aws-quickstart' ]
  DeployMeterGeneratorAndHesSimulator: !Equals [ !Ref MeterDataGenerator, 'ENABLED' ]

Resources:
  CopyGlueScriptsStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/util/copy.scripts.yaml'
        - S3Region:
            !If [ UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion ]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix

  MeterDataGeneratorStack:
    Type: 'AWS::CloudFormation::Stack'
    Condition: DeployMeterGeneratorAndHesSimulator
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-aws-utility-meter-headend-system-simulator/templates/headend.system.simulator.main.yaml'
        - S3Region:
            !If [ UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion ]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        GenerationState: 'ENABLED'
        GenerationInterval: !Ref GenerationInterval
        TotalDevices: !Ref TotalDevices
        RegionalVoltage: 220
        LateArrivalSimulate: 'DISABLED'
        LateArrivalPercent: 10
        LateArrivalMinuteOffset: 1440
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}submodules/quickstart-aws-utility-meter-headend-system-simulator/'
        QSS3BucketRegion: !Ref QSS3BucketRegion

  IntegrationStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/integration/integration.yaml'
        - S3Region:
            !If [ UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion ]
          S3Bucket:
            !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]

  DataStorageStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/datastorage/datastorage.template.yaml'
        - S3Region:
            !If [ UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion ]
          S3Bucket:
            !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]

  MeterreadingsDataflowStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/dataflow/meterreading/meterreading.dataflow.template.yaml'
        - S3Region:
            !If [ UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion ]
          S3Bucket:
            !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        StagingDataBucket: !GetAtt DataStorageStack.Outputs.StagingDataBucket
        IntegratedDataBucket: !GetAtt DataStorageStack.Outputs.IntegratedDataBucket
        GlueStagingDatabase: !GetAtt DataStorageStack.Outputs.GlueStagingDatabase
        GlueIntegratedDatabase: !GetAtt DataStorageStack.Outputs.GlueIntegratedDatabase
        MdaGlueScriptBucket: !GetAtt CopyGlueScriptsStack.Outputs.MdaGlueScriptBucket
        IntegrationBus: !GetAtt IntegrationStack.Outputs.IntegrationEventBus
        DemoMode: !Ref DemoMode
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        QSS3BucketRegion: !Ref QSS3BucketRegion

  HesAdapterStack:
    Type: 'AWS::CloudFormation::Stack'
    Condition: DeployMeterGeneratorAndHesSimulator
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/integration/hes.adapter.yaml'
        - S3Region:
            !If [ UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion ]
          S3Bucket:
            !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        OrchestratorState: "ENABLED"
        OrchestratorInterval: !Ref GenerationInterval
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        SFTPServerAddress: !GetAtt MeterDataGeneratorStack.Outputs.SftpServerAddress
        SFTPUserName: !GetAtt MeterDataGeneratorStack.Outputs.SftpUserName
        SFTPSecretARN: !GetAtt MeterDataGeneratorStack.Outputs.SecretARN
        ReadingsFileBaseURL: !GetAtt MeterDataGeneratorStack.Outputs.apiGatewayInvokeURL
        InboundDataBucket: !GetAtt MeterreadingsDataflowStack.Outputs.InboundDataBucket

  WeatherDataflowStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/dataflow/weather/weather.dataflow.template.yaml'
        - S3Region:
            !If [ UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion ]
          S3Bucket:
            !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        StagingDataBucket: !GetAtt DataStorageStack.Outputs.StagingDataBucket
        IntegratedDataBucket: !GetAtt DataStorageStack.Outputs.IntegratedDataBucket
        GlueStagingDatabase: !GetAtt DataStorageStack.Outputs.GlueStagingDatabase
        GlueIntegratedDatabase: !GetAtt DataStorageStack.Outputs.GlueIntegratedDatabase
        MdaGlueScriptBucket: !GetAtt CopyGlueScriptsStack.Outputs.MdaGlueScriptBucket
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        QSS3BucketRegion: !Ref QSS3BucketRegion

  TopologyDataflowStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/dataflow/topology/topology.dataflow.template.yaml'
        - S3Region:
            !If [ UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion ]
          S3Bucket:
            !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        StagingDataBucket: !GetAtt DataStorageStack.Outputs.StagingDataBucket
        IntegratedDataBucket: !GetAtt DataStorageStack.Outputs.IntegratedDataBucket
        GlueStagingDatabase: !GetAtt DataStorageStack.Outputs.GlueStagingDatabase
        GlueIntegratedDatabase: !GetAtt DataStorageStack.Outputs.GlueIntegratedDatabase
        MdaGlueScriptBucket: !GetAtt CopyGlueScriptsStack.Outputs.MdaGlueScriptBucket
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        QSS3BucketRegion: !Ref QSS3BucketRegion

  VoltVarFeatureStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/feature/voltvar/voltvar.feature.template.yaml'
        - S3Region:
            !If [ UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion ]
          S3Bucket:
            !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix

Outputs:
  StackName:
    Description: Stack name.
    Value: !Sub '${AWS::StackName}'
  StagingDataBucket:
    Description: S3 bucket that contains the staging data.
    Value: !GetAtt DataStorageStack.Outputs.StagingDataBucket
  IntegratedDataBucket:
    Description: S3 bucket that contains the integrated data.
    Value: !GetAtt DataStorageStack.Outputs.IntegratedDataBucket

Parameters:
  DemoMode:
    Default: 'true'
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    Description:
      If DemoMode is enabled, additional utility functions will be deployed to customize the MDA for demo purposes. 
      The overall functionality will not be changed, but the OOTB demo experience will be improved.
  MeterDataGenerator:
    Default: 'DISABLED'
    AllowedValues:
      - 'ENABLED'
      - 'DISABLED'
    Description:
      Enable or disable the meter simulator. If disabled the simulation stack will NOT be deployed.
      If enabled the meter generator as well as HES simulator will be deployed, and both start to generate meter reads immediately.
      (additional costs can occur).
    Type: String
  GenerationInterval:
    Description: Interval between meter reads in minutes, minimum of five.
    Type: Number
    Default: 5
    MinValue: 5
    ConstraintDescription: Interval must be at least five minutes.
  TotalDevices:
    Description: Number of devices to generate readings at each interval.
    Type: Number
    Default: 50000
  QSS3BucketName:
    AllowedPattern: ^[0-9a-z]+([0-9a-z-\.]*[0-9a-z])*$
    ConstraintDescription: >-
      The S3 bucket name can include numbers, lowercase letters,
      and hyphens (-), but it cannot start or end with a hyphen.
    Default: aws-quickstart
    Description: >-
      Name of the S3 bucket for your copy of the deployment assets. Keep the default
      name unless you are customizing the template. Changing the name updates code
      references to point to a new location.
    MinLength: 3
    MaxLength: 63
    Type: String
  QSS3BucketRegion:
    Default: us-east-1
    Description: >-
      AWS Region where the S3 bucket (QSS3BucketName) is hosted. Keep
      the default Region unless you are customizing the template. Changing the Region
      updates code references to point to a new location. When using your own bucket,
      specify the Region.
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^([0-9a-zA-Z!-_\.\*'\(\)/]+/)*$
    ConstraintDescription: >-
      The S3 key prefix can include numbers, lowercase letters, uppercase letters,
      hyphens (-), underscores (_), periods (.), asterisks (*), single quotes ('),
      open parenthesis ((), close parenthesis ()), and forward slashes (/). End the
      prefix with a forward slash.
    Default: quickstart-aws-utility-meter-data-analytics-platform-v2/
    Description: >-
      S3 key prefix that is used to simulate a folder for your copy of the
      deployment assets. Keep the default prefix unless you are customizing
      the template. Changing the prefix updates code references to point to
      a new location.
    Type: String


Metadata:
  QuickStartDocumentation:
    EntrypointName: "Parameters for deploying into an existing VPC"
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Meter data generator configuration
        Parameters:
          - DemoMode
          - MeterDataGenerator
          - GenerationInterval
          - TotalDevices
      - Label:
          default: AWS solution configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
          - QSS3BucketRegion
    ParameterLabels:
      DemoMode:
        default: Enable/disable demo mode
      MeterDataGenerator:
        default: Enable/disable the generator
      GenerationInterval:
        default: Generation interval
      TotalDevices:
        default: Number of devices
      QSS3BucketName:
        default: AWS solution S3 bucket name
      QSS3KeyPrefix:
        default: AWS solution S3 key prefix
      QSS3BucketRegion:
        default: AWS solution S3 bucket Region
