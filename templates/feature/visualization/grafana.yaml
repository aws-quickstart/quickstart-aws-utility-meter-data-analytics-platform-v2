AWSTemplateFormatVersion: "2010-09-09"
Description: "Launches AWS Managed Grafana - Still needs an admin user assigned | Create Grafana Role for accessing Athena. (qs-1r18anahd)"

Parameters:
  AthenaWorkgroup:
    Type: String
    Default: grafana-athena-workgroup
    Description: Name of the athena workgroup grafana will use to query.
  QSS3BucketName:
    Description: The name of the bucket that contains the packaged source
    Type: String
    Default : "mda-data-account-id"


Resources:
  AmazonGrafanaWorkspaceIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonGrafanaAthenaAccess'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - grafana.amazonaws.com
            Action:
              - 'sts:AssumeRole' 
      Policies:
        - PolicyName: S3ReadWriteAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetBucketLocation'
                  - 's3:GetObject'
                  - 's3:ListBucket'
                  - 's3:ListBucketMultipartUploads'
                  - 's3:ListMultipartUploadParts'
                  - 's3:AbortMultipartUpload'
                  - 's3:CreateBucket'
                  - 's3:PutObject'
                  - 's3:PutBucketPublicAccessBlock'
                Resource: 
                  - !Sub 'arn:aws:s3:::${QSS3BucketName}'
                  - !Sub 'arn:aws:s3:::${QSS3BucketName}/*'


  AmazonGrafanaWorkspace:
    Type: 'AWS::Grafana::Workspace'
    Properties:
      AccountAccessType: CURRENT_ACCOUNT
      DataSources: 
        - ATHENA
      Name: AmazonGrafanaWorkspace
      Description: Amazon Grafana Workspace
      AuthenticationProviders:
        - AWS_SSO
      PermissionType: CUSTOMER_MANAGED
      RoleArn: !GetAtt 
        - AmazonGrafanaWorkspaceIAMRole
        - Arn

  GrafanaAthenaWorkgroup:
    Type: AWS::Athena::WorkGroup
    Properties:
      Name: !Ref AthenaWorkgroup
      Description: Athena Workgroup for Amazon Grafana
      RecursiveDeleteOption: true
      State: ENABLED
      Tags:
        - Key: "GrafanaDataSource"
          Value: "true"
      WorkGroupConfiguration:
        ResultConfiguration:
          OutputLocation: !Sub 's3://${QSS3BucketName}/athena'

  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
            - sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:ListBucket'
                Resource: 
                  - !Sub 'arn:aws:s3:::${QSS3BucketName}'
                  - !Sub 'arn:aws:s3:::${QSS3BucketName}/*'
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:ListBucket'
                Resource: 
                  - !Sub 'arn:aws:s3:::${QSS3BucketName}'
                  - !Sub 'arn:aws:s3:::${QSS3BucketName}/*'
              - Effect: Allow
                Action:
                  - 'grafana:DescribeWorkspace'
                  - 'grafana:ListWorkspaces'
                  - 'grafana:CreateWorkspaceApiKey'
                Resource: 
                  - 'arn:aws:grafana:*:*:/workspaces/*'
              - Effect: Allow
                Action:
                  - 'grafana:ListWorkspaces'
                Resource: 
                  - '*'




  GrafanaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref QSS3BucketName
        S3Key: "assets/lambda/configure_grafana/lambda.zip"
      Handler: 'app.lambda_handler'
      Runtime: "python3.9"
      Role: !GetAtt "LambdaExecutionRole.Arn"
      Timeout: 120

  GrafanaAPI:
    Type: Custom::GrafanaAPI
    Properties:
      ServiceToken: !GetAtt GrafanaFunction.Arn
      grafanaId: !Ref AmazonGrafanaWorkspace
      bucket: !Ref QSS3BucketName
      workgroup: !Ref AthenaWorkgroup
    DependsOn: AmazonGrafanaWorkspace

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'Grafana configuration'
        Parameters:
          - QSS3BucketName
          - AthenaWorkgroup
    ParameterLabels:
      AthenaWorkgroup:
        default: Athena Workgroup

Outputs:
  WorkspaceEndpoint:
    Value: !GetAtt 
      - AmazonGrafanaWorkspace
      - Endpoint
  WorkspaceStatus:
    Value: !GetAtt 
      - AmazonGrafanaWorkspace
      - Status
  WorkspaceId:
    Value: !Ref AmazonGrafanaWorkspace
  GrafanaVersion:
    Value: !GetAtt 
      - AmazonGrafanaWorkspace
      - GrafanaVersion
