AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: "Deploys VoltVar feature infrastructure. (SO9213)"


Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - E9007
        - E9008
        - EIAMPolicyActionWildcard
        - EValidateIAMRuleExclusions
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'Feature configuration'
        Parameters:
          - GlueIntegratedDatabase
          - IntegratedDataBucket
      - Label:
          default: 'AWS Quick Start configuration'
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
    ParameterLabels:
      GlueIntegratedDatabase:
        default: Glue integration database Name
      IntegratedDataBucket:
        default: Integrated data bucket name
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix

Parameters:
  GlueIntegratedDatabase:
    Type: String
    Description: Glue integration database Name
  IntegratedDataBucket:
    Type: String
    Description: Integrated data bucket name
  QSS3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription: >-
      Quick Start bucket name can include numbers, lowercase letters, uppercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: aws-quickstart
    Description: >-
      S3 bucket name for the Quick Start assets.
      Only change this value if you customize or extend the Quick Start for your own use.
      This string can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: '^[0-9a-zA-Z-/]*[/]$'
    ConstraintDescription: >-
      Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/) and must terminate in a forward slash.
    Default: quickstart-aws-utility-meter-data-analytics-platform-v2/
    Type: String
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).

Mappings:
  ExtensionsMap:
    us-east-1:
      LambdaInsightsLayer: "arn:aws:lambda:us-east-1:580247275435:layer:LambdaInsightsExtension:35"
    us-east-2:
      LambdaInsightsLayer: "arn:aws:lambda:us-east-2:580247275435:layer:LambdaInsightsExtension:33"
    us-west-1:
      LambdaInsightsLayer: "arn:aws:lambda:us-west-1:580247275435:layer:LambdaInsightsExtension:33"
    us-west-2:
      LambdaInsightsLayer: "arn:aws:lambda:us-west-2:580247275435:layer:LambdaInsightsExtension:33"
    af-south-1:
      LambdaInsightsLayer: "arn:aws:lambda:af-south-1:012438385374:layer:LambdaInsightsExtension:25"
    ap-east-1:
      LambdaInsightsLayer: "arn:aws:lambda:ap-east-1:519774774795:layer:LambdaInsightsExtension:25"
    ap-south-2:
      LambdaInsightsLayer: "arn:aws:lambda:ap-south-2:891564319516:layer:LambdaInsightsExtension:8"
    ap-southeast-3:
      LambdaInsightsLayer: "arn:aws:lambda:ap-southeast-3:439286490199:layer:LambdaInsightsExtension:11"
    ap-south-1:
      LambdaInsightsLayer: "arn:aws:lambda:ap-south-1:580247275435:layer:LambdaInsightsExtension:31"
    ap-northeast-3:
      LambdaInsightsLayer: "arn:aws:lambda:ap-northeast-3:194566237122:layer:LambdaInsightsExtension:2"
    ap-northeast-2:
      LambdaInsightsLayer: "arn:aws:lambda:ap-northeast-2:580247275435:layer:LambdaInsightsExtension:32"
    ap-southeast-1:
      LambdaInsightsLayer: "arn:aws:lambda:ap-southeast-1:580247275435:layer:LambdaInsightsExtension:33"
    ap-southeast-2:
      LambdaInsightsLayer: "arn:aws:lambda:ap-southeast-2:580247275435:layer:LambdaInsightsExtension:33"
    ap-northeast-1:
      LambdaInsightsLayer: "arn:aws:lambda:ap-northeast-1:580247275435:layer:LambdaInsightsExtension:50"
    ca-central-1:
      LambdaInsightsLayer: "arn:aws:lambda:ca-central-1:580247275435:layer:LambdaInsightsExtension:32"
    cn-north-1:
      LambdaInsightsLayer: "arn:aws-cn:lambda:cn-north-1:488211338238:layer:LambdaInsightsExtension:26"
    cn-northwest-1:
      LambdaInsightsLayer: "arn:aws-cn:lambda:cn-northwest-1:488211338238:layer:LambdaInsightsExtension:26"
    eu-central-1:
      LambdaInsightsLayer: "arn:aws:lambda:eu-central-1:580247275435:layer:LambdaInsightsExtension:35"
    eu-west-1:
      LambdaInsightsLayer: "arn:aws:lambda:eu-west-1:580247275435:layer:LambdaInsightsExtension:33"
    eu-west-2:
      LambdaInsightsLayer: "arn:aws:lambda:eu-west-2:580247275435:layer:LambdaInsightsExtension:33"
    eu-south-1:
      LambdaInsightsLayer: "arn:aws:lambda:eu-south-1:339249233099:layer:LambdaInsightsExtension:25"
    eu-west-3:
      LambdaInsightsLayer: "arn:aws:lambda:eu-west-3:580247275435:layer:LambdaInsightsExtension:32"
    eu-south-2:
      LambdaInsightsLayer: "arn:aws:lambda:eu-south-2:352183217350:layer:LambdaInsightsExtension:10"
    eu-north-1:
      LambdaInsightsLayer: "arn:aws:lambda:eu-north-1:580247275435:layer:LambdaInsightsExtension:30"
    eu-central-2:
      LambdaInsightsLayer: "arn:aws:lambda:eu-central-2:033019950311:layer:LambdaInsightsExtension:7"
    me-south-1:
      LambdaInsightsLayer: "arn:aws:lambda:me-south-1:285320876703:layer:LambdaInsightsExtension:25"
    me-central-1:
      LambdaInsightsLayer: "arn:aws:lambda:me-central-1:732604637566:layer:LambdaInsightsExtension:9"
    sa-east-1:
      LambdaInsightsLayer: "arn:aws:lambda:sa-east-1:580247275435:layer:LambdaInsightsExtension:32"

Conditions:
  UsingDefaultBucket: !Equals [ !Ref QSS3BucketName, 'aws-quickstart' ]

Globals:
  Function:
    Runtime: python3.9
    Environment:
      Variables:
        LOG_LEVEL: INFO

Resources:
  VoltVarBucket:
    Type: AWS::S3::Bucket

  VoltVarTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: VoltVarTable

  VoltVarInputSelector:
    Type: AWS::Serverless::Function
    Description: Select service transformer IDs which should be used for VoltVar calculation
    Properties:
      Handler: app.lambda_handler
      CodeUri:
        Bucket: !If [ UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName ]
        Key:
          Fn::Sub: '${QSS3KeyPrefix}assets/lambda/feature_volt_var_input/lambda.zip'
      Timeout: 120
      MemorySize: 128
      Layers:
        - !FindInMap [ ExtensionsMap, !Ref "AWS::Region", "LambdaInsightsLayer" ]
      Environment:
        Variables:
          volt_var_bucket: !Ref VoltVarBucket
          volt_var_input_queue: !GetAtt VoltVarInputQueue.QueueName
          glue_integration_db_name: !Ref GlueIntegratedDatabase
      Role: !GetAtt LambdaVoltVarRole.Arn
      #Events: Add trigger once an hour

  VoltVarAvgVoltagePerTransformerMeterGroup:
    Type: AWS::Serverless::Function
    Description: Calculates avg voltage per transformer meter group, and writes results to SQS
    Properties:
      Handler: app.lambda_handler
      CodeUri:
        Bucket: !If [ UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName ]
        Key:
          Fn::Sub: '${QSS3KeyPrefix}assets/lambda/feature_volt_var_avg_voltage/lambda.zip'
      Timeout: 300
      MemorySize: 256
      Layers:
        - !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPythonV2:17"
        - !FindInMap [ ExtensionsMap, !Ref "AWS::Region", "LambdaInsightsLayer" ]
      Environment:
        Variables:
          volt_var_calculation_queue: !GetAtt VoltVarCalculationQueue.QueueName
          volt_var_bucket: !Ref VoltVarBucket
          glue_integration_db_name: !Ref GlueIntegratedDatabase
      Role: !GetAtt LambdaVoltVarRole.Arn
      Events:
        Batch:
          Type: SQS
          Properties:
            Queue: !GetAtt VoltVarInputQueue.Arn
            BatchSize: 1
            FunctionResponseTypes:
              - ReportBatchItemFailures

  VoltVarCalculation:
    Type: AWS::Serverless::Function
    Description: Calculates VoltVar optimizations
    Properties:
      Handler: app.lambda_handler
      CodeUri:
        Bucket: !If [ UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName ]
        Key:
          Fn::Sub: '${QSS3KeyPrefix}assets/lambda/feature_volt_var_calculator/lambda.zip'
      Timeout: 30
      MemorySize: 128
      Layers:
        - !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPythonV2:17"
        - !FindInMap [ ExtensionsMap, !Ref "AWS::Region", "LambdaInsightsLayer" ]
      Environment:
        Variables:
          DYNAMO_TABLE: !Ref VoltVarTable
      Policies:
        - SQSPollerPolicy:
            QueueName: !GetAtt VoltVarCalculationQueue.QueueName
        - DynamoDBWritePolicy:
            TableName: !Ref VoltVarTable
      Events:
        Batch:
          Type: SQS
          Properties:
            Queue: !GetAtt VoltVarCalculationQueue.Arn
            FunctionResponseTypes:
              - ReportBatchItemFailures

  VoltVarInputDLQ:
    Type: AWS::SQS::Queue

  VoltVarCalculationDLQ:
    Type: AWS::SQS::Queue

  VoltVarInputQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 1800 # Fn timeout 5min * 6
      RedrivePolicy:
        maxReceiveCount: 2
        deadLetterTargetArn: !GetAtt VoltVarInputDLQ.Arn

  VoltVarCalculationQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 180 # Fn timeout 30sec * 6
      RedrivePolicy:
        maxReceiveCount: 2
        deadLetterTargetArn: !GetAtt VoltVarCalculationDLQ.Arn

  LambdaVoltVarRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Path: /
      Policies:
        - PolicyName: sqs_poller
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "athena:StartQueryExecution"
                  - "athena:GetQueryExecution"
                  - "athena:GetQueryResults"
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:ListBucketMultipartUploads"
                  - "s3:AbortMultipartUpload"
                  - "s3:CreateBucket"
                  - "s3:ListBucket"
                  - "s3:DeleteObject"
                  - "s3:GetBucketLocation"
                  - "s3:ListMultipartUploadParts"
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::${VoltVarBucket}/*'
                  - !Sub 'arn:${AWS::Partition}:s3:::${VoltVarBucket}'
                  - !Sub 'arn:${AWS::Partition}:s3:::${IntegratedDataBucket}/*'
                  - !Sub 'arn:${AWS::Partition}:s3:::${IntegratedDataBucket}'
              - Effect: Allow
                Action:
                  - "sqs:SendMessage"
                  - "sqs:DeleteMessage"
                  - "sqs:DeleteMessageBatch"
                  - "sqs:GetQueueAttributes"
                  - "sqs:ReceiveMessage"
                  - "sqs:GetQueueUrl"
                  - "sqs:ChangeMessageVisibility"
                  - "sqs:ChangeMessageVisibilityBatch"
                Resource:
                  - !Sub "arn:${AWS::Partition}:sqs:${AWS::Region}:${AWS::AccountId}:${VoltVarInputQueue.QueueName}"
                  - !Sub "arn:${AWS::Partition}:sqs:${AWS::Region}:${AWS::AccountId}:${VoltVarCalculationQueue.QueueName}"
              - Effect: Allow
                Action:
                  - 'glue:GetTable'
                  - 'glue:GetTables'
                  - 'glue:GetPartition'
                  - 'glue:GetPartitions'
                  - 'glue:BatchGetPartition'
                Resource:
                  - !Sub "arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:catalog"
                  - !Sub "arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:database/${GlueIntegratedDatabase}"
                  - !Sub "arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:table/${GlueIntegratedDatabase}/topology_data_integrated_*"
                  - !Sub "arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:table/${GlueIntegratedDatabase}/meter_readings_integrated_*"

  ##
  ## Bucket Cleanup
  ##

  VoltVarCustomResourceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Path: /
      Policies:
        - PolicyName: lambda-copier
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListObjectVersions
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::${QSS3BucketName}/${QSS3KeyPrefix}*'
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:DeleteObjects
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetObjectAttributes
                  - s3:ListBucket
                  - s3:ListBucketVersions
                  - s3:GetBucketVersioning
                  - s3:GetBucketVersion
                  - s3:ListObjectVersionsing
                  - s3:ListObjectVersions
                  - s3:DeleteObjectVersion
                  - s3:DeleteObject
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::${VoltVarBucket}/*'
                  - !Sub 'arn:${AWS::Partition}:s3:::${VoltVarBucket}'

  VoltVarCustomResourceInvoke:
    Type: Custom::VoltVarCustomResource
    Version: '1.0'
    Properties:
      ServiceToken: !GetAtt VoltVarCustomResourceFunction.Arn
      DestBucket: !Ref VoltVarBucket

  VoltVarCustomResourceFunction:
    Type: AWS::Lambda::Function
    Properties:
      Role: !GetAtt VoltVarCustomResourceRole.Arn
      Runtime: python3.9
      MemorySize: 512
      Timeout: 240
      ReservedConcurrentExecutions: 1
      Handler: 'app.lambda_handler'
      Code:
        S3Bucket: !If [ UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName ]
        S3Key: !Sub '${QSS3KeyPrefix}assets/lambda/s3_copy_custom_resource/lambda.zip'
